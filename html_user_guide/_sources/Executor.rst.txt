=========================
**CSyn Executor Service**
=========================


----------------
**Introduction**
----------------

Executor implements client applications job requests. Executor sends status information requets (heartbeats) to Director. The executor will be activated and included in the list of available executors, as soon as it will start to send heartbeats to Director. If heartbeats have been missed the Director will exclude Executor from the list available executors and set it as deactivated. 


----------------------------------
**Installation and Configuration**
----------------------------------

For Windows machine, a Windows installation executable is available. For Linux, an archive file is available for download to a target machine.
Executor could be started as service for Windows and daemon process on Linux
Once installed, The CSyn Executor configuration can be changed. The main configuration property list:

	* master.host key defines director host
	* master.port key defines director porn 
	* db.path key defines database path
	* task.per.device key defines max number of task per request
	* globalmemory.per.device key defines max allowed global memory per job
	* max.job.run.time key defines max job run time
	* max.jobresult.cashe.time key defines max job results cashe time
	* max.jobstatus.cashe.time key defines max job status cashe time
	* device.major key defines GPU device major compute capability

----------------------------------
**Windows launch**
----------------------------------

Executor startup option list for Windows machine:
	
	* /registerService=name option register the application as a service
	* /unregisterService option unregister the application as a service
	* /displayName=name option specify a display name for the service (only with /registerService)
	* /description=text option specify a description for the service (only with /registerService)
	* /startup=automatic|manual option specify the startup mode for the service (only with /registerService)
	* /port=value option executor service port
	
For example next command will register Windows service executor0 with display name CsynExecutor0. When service will be started it will use port 8090 to communicate with CSyn Director.

	CSynExecutor.exe /registerService=executor0 /displayName=CsynExecutor0 /startup=automatic /port=8090
	
For example next command will start CSyn executor. It will use port 8090 to communicate with CSyn Director.

	CSynExecutor.exe  /port=8090
	
----------------------------------
**Linux launch**
----------------------------------

Executor startup option list for Linux machine:
	
	* --daemon run as a daemon
	* --port=value option executor service port
	
For example next command will start CSyn executor as daemon. It will use port 8090 to communicate with CSyn Director.

	CSynExecutor --daemon --port=8090
	
For example next command will start CSyn executor. It will use port 8090 to communicate with CSyn Director.

	CSynExecutor  --port=8090

---------------------------------------------
**Job execution and Engines Balance Loading**
---------------------------------------------

CSyn Executor takes a central role in job execution process and supports engines load balancing. CSyn Executor gets the list of available engines from CSyn Director. To run the job, CSyn Executor splits the task into groups and submits these groups to different engines for parallel execution. Executor load balancing policy is based on assumption that all CSyn engines are equal. CSyn Executor will send group for execution to next engine with the minimum assigned tasks. 

