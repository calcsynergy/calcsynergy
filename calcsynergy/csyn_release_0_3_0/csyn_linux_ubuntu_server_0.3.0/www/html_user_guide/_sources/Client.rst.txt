===============
**CSyn Client**
===============

   
----------------
**Introduction**
----------------

	CSyn client supports a request-response service model for managing different data components inclusive of modules, kernels and executing related tasks. CSyn runtime environment receives client requests and services them in parallel. Each client request is independent and generally arrives unpredictably at varying points in time. 

--------------
**Data Model**
--------------

^^^^^^^^^^
**Module**
^^^^^^^^^^
	CSyn Module component defines dynamically loadable packages that can be used by runtime environment. These packages are output of an NVCC CUDA compiler 
	(seeÂ `Compilation with NVCC <https://docs.nvidia.com/cuda/cuda-compiler-driver-nvcc/index.html>`_) or C++ shared libraries 	

	CSyn supports four type of modules:
	
		* CUDA compiled assemly in PTX code or binary cubin file that defines C++ CUDA kernels
		* CUDA compiled fatCubin file that defines C++ CUDA kernels
		* C++ shared library that defines functions with GPU memory referenced parameters 
		* C++ shared library that defines functions with host memory referenced parameters 

	CSyn module code code must be compatible with CSyn GPU devices compute capability architectures. 
	
	CSyn module contains next properties:

		* Module name
		* Module version
		* Module Description
		* Module type
		
			* 0 defines system module type. CSyn provides CUDA BLAS and Sorting network libraries
			* 1 defines custom module with assembly compiled as binary fatCubin object
			* 2 defines custom module with assembly compiled as binary cubin object or PTX code
			* 3 defines custom C++ shared library that defines functions with GPU memory referenced parameters 
			* 4 defines custom C++ that defines functions with host memory referenced parameters 
	

^^^^^^^^^^
**Kernel**
^^^^^^^^^^

	CSyn Kernel component defines functions provided by specific modules. User can create instances of Kernel, 
	provide Kernel parameters values and execute accordingly. CSyn Kernel contains the following next properties:
	
		* Module name
		* Module version
		* Module type
		* Kernel name
		* Kernel description
		* List of Parameter objects

	CSyn Parameter component specifies kernel parameter. It contains the following next properties:
	
		* Parameter name
		* Parameter description
		* Parameter data type
		* Parameter type
		* Parameter order
		* Parameter Value object or global value name

	CSyn supports the following next Parameter data types:
	
		* Char
		* Int32
		* Int64
		* Float
		* Double
		* String
		* Char Array
		* Int32 Array
		* Int64 Array
		* Float Array
		* Double Array

	CSyn supports the following next Parameter type:
	
		* Input parameter
		* Output parameter
		* Input/Output parameter

	CSyn Value component contains Parameter data. Parameter global value name define reference to shared list of Value components.

^^^^^^^
**Job**
^^^^^^^

	CSyn Job component defines overall workload request to execute by runtime environment. 
	CSyn Job contains next properties:
	
		* Job Name
		* List of Task objects
		* List of global values shared by tasks
		* Job properties to define CUDA grid and block size, job max run time, job tasks execution type

	CSyn Task component specifies specific kernel to be execute as part of Job. 
	CSyn Task contains next properties:
	
		* Task Name
		* Kernel object with established parameter values
		* Task properties to define CUDA grid and block size

	CSyn JobResult component defines job execution results. C
	Syn JobResult contains next properties:
	
		* Job Name
		* Job universally unique identifier (UUID)
		* List of TaskResult objects

	CSyn TaskResult component defines task execution results. It contains all kernel output type parameters.
	CSyn TaskResult contains next properties:
	
		* Task Name
		* Task UUID
		* List of kernel parameter objects.
		
	CSyn JobStatus component defines job execution status. C
	Syn JobStatus contains next properties:
	
		* Job Name
		* Job UUID
		* Job start time
		* Job end time
		* Job execution time interval
		* Job execution status
		* Job execution error
		* List of TaskStatus objects
		
	CSyn TaskStatus component defines task execution status. C
	Syn TaskStatus contains next properties:
	
		* Task Name
		* Task UUID
		* Task start time
		* Task execution time interval
		* Task execution status
		* Task execution error
		
	
---------------------
**Programming model**
---------------------

	CSyn runtime environment service provides next list of activities:
	
		* Get list of available modules
		* Get list of kernels for specific module
		* Get specific kernel
		* Execute job; This call return job result when job execution will be finished
		* Execute job asynchronously; This call return job status when job execution will be started   
		* Get job execution status
		* Get job execution result
		* Create list of kernels
		* Remove list of kernels
		* Remove specific kernel
		* Create custom module and upload module assemly file or shared library 
		* Remove custom module

	Following describe job execution step sequence:
	
		* Create job component
		* Create job task list using next steps:
		
			* Get kernel component from CSyn runtime environment
			* Set up kennel input parameters values
			* Create task component using kernel and add it to job task list 
			
		* Execute job and receive job result
		
	Following describe job asynchronously execution step sequence:
	
		* Create job
		* Create job task list using next steps:
		
			* Get kernel component from CSyn runtime environment
			* Set up kennel input parameters values
			* Create task component using kernel and add it to job task list 
			
		* Execute job asynchronously 
		* Check the job execution status
		* When the job has been executed get job result
